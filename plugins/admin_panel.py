
import os, sys, time, asyncio, logging, datetime
from config import Config
from pyrogram import Client, filters
from helper.database import AshutoshGoswami24
from pyrogram.types import Message
from pyrogram.errors import FloodWait, InputUserDeactivated, UserIsBlocked, PeerIdInvalid


logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)
 




@Client.on_message(filters.command(["stats", "status", "s"]) & filters.user(Config.ADMIN))
async def get_stats(bot, message):
    total_users = await AshutoshGoswami24.total_users_count()
    uptime = time.strftime("%Hh%Mm%Ss", time.gmtime(time.time() - bot.uptime))    
    start_t = time.time()
    st = await message.reply('**P Ä·¥è·¥Ñ·¥áss…™…¥…¢ T ú·¥á D·¥á·¥õ·¥Ä…™ üs.....**')    
    end_t = time.time()
    time_taken_s = (end_t - start_t) * 1000
    await st.edit(text=f"**--B·¥è·¥õ S·¥õ·¥Ä·¥õ·¥ús--** \n\n**‚åö B·¥è·¥õ U·¥òT…™·¥ç·¥á :** `{uptime}` \n**üêå C·¥ú Ä Ä·¥á…¥·¥õ P…™…¥…¢ :** `{time_taken_s:.3f} ms` \n**üë≠ T·¥è·¥õ·¥Ä ü Us·¥á Äs :** `{total_users}`")



@Client.on_message(filters.command(["restart", "r"]) & filters.user(Config.ADMIN))
async def restart_bot(bot, message):
    msg = await bot.send_message(text="üîÑ P Ä·¥è·¥Ñ·¥áss·¥ás S·¥õ·¥è·¥ò·¥á·¥Ö. B·¥è·¥õ Is R·¥ás·¥õ·¥Ä Ä·¥õ…™…¥…¢...", chat_id=message.chat.id)       
    await asyncio.sleep(3)
    await msg.edit("‚úÖÔ∏è B·¥è·¥õ Is R·¥ás·¥õ·¥Ä Ä·¥õ·¥á·¥Ö. N·¥è·¥° Y·¥è·¥ú C·¥Ä…¥ Us·¥á M·¥á")
    os.execl(sys.executable, sys.executable, *sys.argv)



@Client.on_message(filters.private & filters.command(["ping", "p"]))
async def ping(_, message):
    start_t = time.time()
    rm = await message.reply_text("Pinging....")
    end_t = time.time()
    time_taken_s = (end_t - start_t) * 1000
    await rm.edit(f"P…™…¥…¢ üî•!\n{time_taken_s:.3f} ms")
    return time_taken_s



@Client.on_message(filters.command(["B Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ", "b"]) & filters.user(Config.ADMIN) & filters.reply)
async def broadcast_handler(bot: Client, m: Message):
    await bot.send_message(Config.LOG_CHANNEL, f"{m.from_user.mention} or {m.from_user.id} Is S·¥õ·¥Ä Ä·¥õ·¥á·¥Ö T ú·¥á B Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ......")
    all_users = await AshutoshGoswami24.get_all_users()
    broadcast_msg = m.reply_to_message
    sts_msg = await m.reply_text("B Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ S·¥õ·¥Ä Ä·¥õ·¥á·¥Ö..!") 
    done = 0
    failed = 0
    success = 0
    start_time = time.time()
    total_users = await AshutoshGoswami24.total_users_count()
    async for user in all_users:
        sts = await send_msg(user['_id'], broadcast_msg)
        if sts == 200:
           success += 1
        else:
           failed += 1
        if sts == 400:
           await AshutoshGoswami24.delete_user(user['_id'])
        done += 1
        if not done % 20:
           await sts_msg.edit(f"**B Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ I…¥ P Ä·¥è…¢ Ä·¥áss :** \n\nT·¥è·¥õ·¥Ä ü Us·¥á Äs {total_users} \nC·¥è·¥ç·¥ò ü·¥á·¥õ·¥á·¥Ö : {done} / {total_users}\nS·¥ú·¥Ñ·¥Ñ·¥áss : {success}\nF·¥Ä…™ ü·¥á·¥Ö : {failed}")
    completed_in = datetime.timedelta(seconds=int(time.time() - start_time))
    await sts_msg.edit(f"**B Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ C·¥è·¥ç·¥ò ü·¥á·¥õ·¥á·¥Ö :** \n\nC·¥è·¥ç·¥ò ü·¥á·¥õ·¥á·¥Ö I…¥ `{completed_in}`.\n\nT·¥è·¥õ·¥Ä ü Us·¥á Äs {total_users}\nC·¥è·¥ç·¥ò ü·¥á·¥õ·¥á·¥Ö : {done} / {total_users}\nS·¥ú·¥Ñ·¥Ñ·¥áss : {success}\nF·¥Ä…™ ü·¥á·¥Ö : {failed}")
           
async def send_msg(user_id, message):
    try:
        await message.copy(chat_id=int(user_id))
        return 200
    except FloodWait as e:
        await asyncio.sleep(e.value)
        return send_msg(user_id, message)
    except InputUserDeactivated:
        logger.info(f"{user_id} : D·¥á·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á·¥Ö")
        return 400
    except UserIsBlocked:
        logger.info(f"{user_id} : B ü·¥è·¥Ñ·¥ã·¥á·¥Ö T ú·¥á B·¥è·¥õ")
        return 400
    except PeerIdInvalid:
        logger.info(f"{user_id} : Us·¥á Ä …™·¥Ö I…¥·¥†·¥Ä ü…™·¥Ö")
        return 400
    except Exception as e:
        logger.error(f"{user_id} : {e}")
        return 500
 







# Ä·¥Ä·¥ò·¥è ·¥Ñ Ä·¥á·¥Ä·¥õ·¥è Ä https://github.com/AshutoshGoswami24
# Ä·¥Ä·¥ò·¥è https://github.com/AshutoshGoswami24/Rename-Bot
# Ä·¥Ä·¥ò·¥è https://github.com/AshutoshGoswami24/Rename-Bot

